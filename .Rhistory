library(roxygen2)
library(roxygen2)
#' Detect Missing Values in a Dataset
#'
#' This function detects and counts the missing values in each column of a given dataset.
#' @param data A data frame to be checked for missing values.
#' @return A named vector with counts of missing values for columns that have any missing data.
#' @examples
#' sample_data <- data.frame(A = c(1, 2, NA, 4, 5), B = c(NA, 2, 3, 4, 5), C = c(1, 2, 3, 4, 5))
#' detect_missing_values(sample_data)
detect_missing_values <- function(data) {
missing_counts <- numeric(ncol(data))
names(missing_counts) <- colnames(data)
for (i in 1:ncol(data)) {
missing_counts[i] <- sum(is.na(data[[i]]))
}
missing_counts <- missing_counts[missing_counts > 0]
return(missing_counts)
}
#' Calculate Median for Each Variable
#'
#' This function calculates the median for each numeric variable in a dataset.
#' @param data A data frame for which to calculate medians.
#' @return A named vector of medians for each numeric column.
#' @examples
#' sample_data <- data.frame(A = c(1, 2, NA, 4, 5), B = c(NA, 2, 3, 4, 5), C = c(1, 2, 3, 4, 5))
#' calculate_median(sample_data)
calculate_median <- function(data) {
medians <- numeric(0)
for (col_name in colnames(data)) {
if (is.numeric(data[[col_name]])) {
medians[col_name] <- median(data[[col_name]], na.rm = TRUE)
} else {
cat(paste("Skipping non-numeric column:", col_name, "\n"))
}
}
return(medians)
}
library(roxygen2)
#' Replace Missing Values with Median Values
#'
#' This function replaces missing values in numeric columns of a dataset with the column's median.
#' @param data A data frame in which to replace missing values.
#' @return The data frame with missing values replaced by medians.
#' @examples
#' sample_data <- data.frame(A = c(1, 2, NA, 4, 5), B = c(NA, 2, 3, 4, 5), C = c(1, 2, 3, 4, 5))
#' replace_with_median(sample_data)
replace_with_median <- function(data) {
for (col_name in colnames(data)) {
if (is.numeric(data[[col_name]])) {
col_median <- median(data[[col_name]], na.rm = TRUE)
data[[col_name]][is.na(data[[col_name]])] <- col_median
} else {
cat(paste("Skipping non-numeric column:", col_name, "\n"))
}
}
return(data)
}
library(roxygen2)
updated_data <- replace_with_median(sample_data)
library(devtools)
library(roxygen2)
setwd("C:\Users\uaniq\Documents\MedianPckgMeng\MedianPckgMeng.Rproj")
setwd("C:\\Users\\uaniq\\Documents\\MedianPckgMeng\\MedianPckgMeng.Rproj")
setwd("C:\\Users\\uaniq\\Documents\\MedianPckgMeng.Rproj")
setwd("C:/Users/uaniq/Documents/MedianPckgMeng/MedianPckgMeng.Rproj")
setwd("C:\Users\uaniq\Documents\MedianPckgMeng")
setwd("C:\\Users\\uaniq\\Documents\\MedianPckgMeng")
document()
build("C:\\Users\\uaniq\\Documents\\MedianPckgMeng")
install.packages("C:\\Users\\uaniq\\Documents\\MedianPckgMeng\\MedianPckgMeng_0.1.0.tar.gz",repos=NULL,type="source")
detach("package:MedianPckgMeng", unload = TRUE)
install.packages("C:\\Users\\uaniq\\Documents\\MedianPckgMeng\\MedianPckgMeng_0.1.0.tar.gz",repos=NULL,type="source")
detach("package:MedianPckgMeng", unload = TRUE)
install.packages("C:\\Users\\uaniq\\Documents\\MedianPckgMeng\\MedianPckgMeng_0.1.0.tar.gz",repos=NULL,type="source")
install.packages("C:\\Users\\uaniq\\Documents\\MedianPckgMeng\\MedianPckgMeng_0.1.0.tar.gz",repos=NULL,type="source")
build("C:\\Users\\uaniq\\Documents\\MedianPckgMeng")
library(devtools)
library(roxygen2)
setwd("C:\\Users\\uaniq\\Documents\\MedianPckgMeng")
document()
build("C:\\Users\\uaniq\\Documents\\MedianPckgMeng")
install.packages("C:\\Users\\uaniq\\Documents\\MedianPckgMeng\\MedianPckgMeng_0.1.0.tar.gz",repos=NULL,type="source")
detach("package:MedianPckgMeng", unload = TRUE)
install.packages("C:\\Users\\uaniq\\Documents\\MedianPckgMeng\\MedianPckgMeng_0.1.0.tar.gz",repos=NULL,type="source")
usethis::use_testthat(MedianPckgMeng)
devtools::load_all(".")
library(MedianPckgMeng)
?detect_missing_values
?calculate_median
?update_data
?replace_with_median
devtools::check(MedianPckgMeng)
devtools::check(MedianPckgMeng)
library(devtools)
library(usethis)
library(devtools)
devtools::check()  # Checks for issues with the package
rm(list = c("calculate_median", "detect_missing_values",
"replace_with_median"))
devtools::check()  # Checks for issues with the package
